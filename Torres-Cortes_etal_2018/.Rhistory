theme(legend.position="none")
radish = ggplot(gc_out_radish2, aes(x=id, y=auc_e, fill=growth)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")
graph_grothw <- grid.arrange(bean, radish , nrow=1, ncol=2)
grid.arrange(graph_grothw, beandfgenus, nrow=2, ncol=2)
grid.arrange(graph_grothw, beandfgenus, nrow=2, ncol=1)
grid.arrange(beandfgenus, graph_grothw, nrow=2, ncol=1)
# load packages
library(growthcurver)
library(ggplot2)
library(gridExtra)
library(dplyr)
# load samples
dbean <- read.table("~/Documents/Metagenomics_paper/Blast_bin_strains/Grotwh_curves/growth_curve_beana.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
dradish <- read.table("~/Documents/Metagenomics_paper/Blast_bin_strains/Grotwh_curves/growth_curve_radisha.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#Plot auc
# Remove last row
gc_out_bean2 = gc_out_bean[-c(25), ]
gc_out_radish2 = gc_out_radish[-c(25), ]
# Add id replicate number and oligotroph/copiotroph colum
gc_out_bean2$id <- c("R4", "R4", "R4", "R10", "R10", "R10", "R19", "R19", "R19", "R27", "R27", "R27", "H3", "H3", "H3", "H19", "H19", "H19","H13", "H13", "H13", "ASV1", "ASV1", "ASV1" )
gc_out_bean2$growth <- c("copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph","oligotroph", "oligotroph", "oligotroph")
gc_out_radish2$id <- c("R4", "R4", "R4", "R10", "R10", "R10", "R19", "R19", "R19", "R27", "R27", "R27", "H3", "H3", "H3", "H19", "H19", "H19","H13", "H13", "H13", "ASV1", "ASV1", "ASV1" )
gc_out_radish2$growth <- c("copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph","oligotroph", "oligotroph", "oligotroph")
#Plot it
bean = ggplot(gc_out_bean2, aes(x=id, y=auc_e, fill=growth)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")
radish = ggplot(gc_out_radish2, aes(x=id, y=auc_e, fill=growth)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")
graph_grothw <- grid.arrange(bean, radish , nrow=1, ncol=2)
#Anova
brary(growthcurver)
library(ggplot2)
library(gridExtra)
library(dplyr)
# load samples
dbean <- read.table("~/Documents/Metagenomics_paper/Blast_bin_strains/Grotwh_curves/growth_curve_beana.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
dradish <- read.table("~/Documents/Metagenomics_paper/Blast_bin_strains/Grotwh_curves/growth_curve_radisha.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
# If you would like to use the "blank" background correction, then call
# Growthcurver as follows
gc_out_bean <- SummarizeGrowthByPlate(dbean, bg_correct = "blank")
gc_out_radish <- SummarizeGrowthByPlate(dradish, bg_correct = "blank")
#Plot auc
# Remove last row
gc_out_bean2 = gc_out_bean[-c(25), ]
gc_out_radish2 = gc_out_radish[-c(25), ]
# Add id replicate number and oligotroph/copiotroph colum
gc_out_bean2$id <- c("R4", "R4", "R4", "R10", "R10", "R10", "R19", "R19", "R19", "R27", "R27", "R27", "H3", "H3", "H3", "H19", "H19", "H19","H13", "H13", "H13", "ASV1", "ASV1", "ASV1" )
gc_out_bean2$growth <- c("copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph","oligotroph", "oligotroph", "oligotroph")
gc_out_radish2$id <- c("R4", "R4", "R4", "R10", "R10", "R10", "R19", "R19", "R19", "R27", "R27", "R27", "H3", "H3", "H3", "H19", "H19", "H19","H13", "H13", "H13", "ASV1", "ASV1", "ASV1" )
gc_out_radish2$growth <- c("copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph","oligotroph", "oligotroph", "oligotroph")
#Plot it
bean = ggplot(gc_out_bean2, aes(x=id, y=auc_e, fill=growth)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")
radish = ggplot(gc_out_radish2, aes(x=id, y=auc_e, fill=growth)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")
graph_grothw <- grid.arrange(bean, radish , nrow=1, ncol=2)
#Anova
bean_anova= select(gc_out_bean2, sample, auc_e, growth)
radish_anova= select(gc_out_radish2, sample, auc_e, growth)
#Anova
Ba= aov(auc_e ~ growth, data = bean_anova )
Ra= aov(auc_e ~ growth, data = radish_anova )
#Summary
SumBa = summary.aov(Ba)
SumRa = summary.aov(Ra)
Tuka = TukeyHSD(Ba)
Tuka
View(gc_out_bean2)
bean_anovai= select(gc_out_bean2, sample, auc_e, id)
radish_anovai= select(gc_out_radish2, sample, auc_e, id)
Bai= aov(auc_e ~ id, data = bean_anovai )
Rai= aov(auc_e ~ id, data = radish_anovai )
summary.aov(Bai)
summary.aov(Rai)
TukeyHSD(Bai)
TukeyHSD(Rai)
## setting working directory
setwd("~/Documents/Torres-Cortes_etal_2018")
#Load the different packages.
library("phytools")
library("ggplot2")
library(plyr)
library(reshape2)
library(grid)
library(gridExtra)
library(scales)
library(ampvis)
library("DESeq2")
library("phyloseq")
library("beanplot")
#Load a ggplot theme
theme_set(theme_bw())
#Load custom R functions for graphics
source("Functions/graphical_methods.R")
source("Functions/tree_methods.R")
source("Functions/plot_merged_trees.R")
source("Functions/specificity_methods.R")
source("Functions/ternary_plot.R")
source("Functions/richness.R")
source("Functions/edgePCA.R")
source("Functions/copy_number_correction.R")
source("Functions/import_frogs.R")
source("Functions/prevalence.R")
COGs <- as.matrix(read.csv("Input_tables/COG_all.csv", sep = "\t", row.names = 1, check.names=FALSE))
Class <- as.matrix(read.csv("Input_tables/cog_tax.csv", sep = "\t", row.names = 1))
sampledata <- read.csv("Input_tables/design.txt", sep = "\t", row.names = 1, check.names=FALSE)
test<- phyloseq(otu_table(COGs, taxa_are_rows = TRUE),
tax_table(Class),
sample_data(sampledata))
#Change the order of factors
sample_data(test)$Stage= factor(sample_data(test)$Stage, levels= c("Seed", "Germinating", "Seedling"))
levels(sample_data(test)$Stage)
#Split phyloseq object in bean + radish
bean2 <- subset_samples(test, Plant=="Bean")
radish2 <- subset_samples(test, Plant=="Radish")
#Rarefy datasets at 10,000 reads per sample
rbean2 <- rarefy_even_depth(bean2, sample.size = 10000, rngseed = 722)
rrad2 <- rarefy_even_depth(radish2, sample.size = 10000, rngseed = 722)
# Create a factor corresponding to the General COG cathegories
genfac = factor(tax_table(test)[, "Class"])
# Tabulate the counts for each Class in each sample
gentab = apply(otu_table(test), MARGIN = 2, function(x) {
tapply(x, INDEX = genfac, FUN = sum, na.rm = TRUE, simplify = TRUE)
})
head(gentab)[, 1:10]
#Create new phyloseq
gentabtaxo <- as.matrix(read.csv("~/Documents/Phyloseq/Matthieu/gentab_tax.txt", sep = "\t", row.names = 1))
gentabp <- phyloseq(otu_table(gentab, taxa_are_rows = TRUE),
tax_table(gentabtaxo),
sample_data(sampledata))
#Change the order of factors
sample_data(gentabp)$Stage= factor(sample_data(gentabp)$Stage, levels= c("Seed", "Germinating", "Seedling"))
levels(sample_data(gentabp)$Stage)
#Split phyloseq object in bean + radish
beangeneral2 <- subset_samples(gentabp, Plant=="Bean")
radishgeneral2 <- subset_samples(gentabp, Plant=="Radish")
per.beangeneral2 <- transform_sample_counts(beangeneral2, function(x) x / sum(x) * 100)
per.radishgeneral2 <- transform_sample_counts(radishgeneral2, function(x) x / sum(x) * 100)
shapiro_bean = shapiro.test(per.beangeneral2)
per.bengeneral2data = as(otu_table(per.beangeneral2), "matrix")
shapiro_bean = shapiro.test(per.beangeneral2data)
shapiro_bean = shapiro.test(per.bengeneral2data)
shapiro.test(per.bengeneral2data)
per.radishgeneral2data = as(otu_table(per.radishgeneral2), "matrix")
shapiro_radish = shapiro.test(per.radishgeneral2data)
shapiro.test(per.radishgeneral2data)
View(per.bengeneral2data)
shapiro_bean = shapiro.test(per.bengeneral2data$BG1)
shapiro.test(per.bengeneral2data$BG1)
# load samples
dbean <- read.table("Input_tables/growth_curve_beana.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
dradish <- read.table("Input_tables/growth_curve_radisha.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#Grotwhcurve
gc_out_bean <- SummarizeGrowthByPlate(dbean, bg_correct = "blank")
gc_out_radish <- SummarizeGrowthByPlate(dradish, bg_correct = "blank")
library(growthcurver)
library(ggplot2)
library(gridExtra)
library(dplyr)
library(multcomp)
# load samples
dbean <- read.table("Input_tables/growth_curve_beana.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
dradish <- read.table("Input_tables/growth_curve_radisha.txt", header = TRUE, sep = "\t", stringsAsFactors = FALSE)
#Grotwhcurve
gc_out_bean <- SummarizeGrowthByPlate(dbean, bg_correct = "blank")
gc_out_radish <- SummarizeGrowthByPlate(dradish, bg_correct = "blank")
# Add id replicate number and oligotroph/copiotroph colum
gc_out_bean2$id <- c("R04", "R04", "R04", "R10", "R10", "R10", "R19", "R19", "R19", "R27", "R27", "R27", "H3", "H3", "H3", "H19", "H19", "H19","H13", "H13", "H13", "ASV1", "ASV1", "ASV1" )
gc_out_bean2$growth <- c("copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph","oligotroph", "oligotroph", "oligotroph")
gc_out_radish2$id <- c("R04", "R04", "R04", "R10", "R10", "R10", "R19", "R19", "R19", "R27", "R27", "R27", "H3", "H3", "H3", "H19", "H19", "H19","H13", "H13", "H13", "ASV1", "ASV1", "ASV1" )
gc_out_radish2$growth <- c("copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph","oligotroph", "oligotroph", "oligotroph")
gc_out_bean2 = gc_out_bean[-c(25), ]
gc_out_radish2 = gc_out_radish[-c(25), ]
# Add id replicate number and oligotroph/copiotroph colum
gc_out_bean2$id <- c("R04", "R04", "R04", "R10", "R10", "R10", "R19", "R19", "R19", "R27", "R27", "R27", "H3", "H3", "H3", "H19", "H19", "H19","H13", "H13", "H13", "ASV1", "ASV1", "ASV1" )
gc_out_bean2$growth <- c("copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph","oligotroph", "oligotroph", "oligotroph")
gc_out_radish2$id <- c("R04", "R04", "R04", "R10", "R10", "R10", "R19", "R19", "R19", "R27", "R27", "R27", "H3", "H3", "H3", "H19", "H19", "H19","H13", "H13", "H13", "ASV1", "ASV1", "ASV1" )
gc_out_radish2$growth <- c("copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph","copiotroph", "copiotroph", "copiotroph", "copiotroph", "copiotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph", "oligotroph","oligotroph", "oligotroph", "oligotroph")
View(gc_out_bean2)
tperben = t(per.bengeneral2data)
View(tperben)
tperben$stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
tperben = t(per.bengeneral2data)
View(tperben)
tperben = t(per.bengeneral2data)
View(tperben)
tperben$stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
tperben = t(per.bengeneral2data)
gc_out_bean2 = gc_out_bean[-c(25), ]
gc_out_radish2 = gc_out_radish[-c(25), ]
View(gc_out_bean2)
gc_out_bean2$id <- c("R04", "R04", "R04", "R10", "R10", "R10", "R19", "R19", "R19", "R27", "R27", "R27", "H3", "H3", "H3", "H19", "H19", "H19","H13", "H13", "H13", "ASV1", "ASV1", "ASV1" )
tperben = t(per.bengeneral2data)
View(tperben)
tperben$test = 534
tperben = t(per.bengeneral2data)
stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
per.bengeneral2data = as(otu_table(per.beangeneral2), "data.frame")
per.bengeneral2data = as(otu_table(per.beangeneral2), "matrix")
stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
cbind(tperben, newColumn= stage)
tperben = cbind(tperben, newColumn= stage)
tperben = cbind(Stage, newColumn= stage)
tperben = cbind(stage, stage= stage)
View(gc_out_radish2)
per.bengeneral2data = as(otu_table(per.beangeneral2))
per.bengeneral2data = as(otu_table(per.beangeneral2), "matrix")
per.radishgeneral2data = as(otu_table(per.radishgeneral2), "matrix")
tperben = t(per.bengeneral2data)
stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
tperben = cbind(stage, stage= stage)
OTUdf = as.data.frame(tperben)
View(OTUdf)
View(tperben)
tperben = t(per.bengeneral2data)
stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
tperben = cbind(stage, stage= stage)
View(tperben)
tperben = t(per.bengeneral2data)
OTUdf = as.data.frame(tperben)
Otudf$test = test(c(1,2))
Otudf$test = Otudf$test(c(1,2))
OTUdf = as.data.frame(tperben)
Otudf$test = Otudf$test(c(1,2))
OTUdf = as.data.frame(tperben)
OTUdf$test = OTUdf$test(c(1,2))
OTUdf$new = OTUdf$new(c(1,2))
per.bengeneral2data = as(otu_table(per.beangeneral2), "matrix")
per.radishgeneral2data = as(otu_table(per.radishgeneral2), "matrix")
tperben = t(per.bengeneral2data)
stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
tperben = cbind(stage, new= stage)
View(tperben)
tperben = cbind(tperben, new= stage)
View(tperben)
tperben = t(per.bengeneral2data)
stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
tperben = cbind(tperben, new= stage)
View(tperben)
OTUdf = as.data.frame(tperben)
shapiro_bean = shapiro.test(OTUdf$A)
per.beangeneral2data =as.data.frame(otu_table(per.beangeneral2))
tperben = t(per.bengeneral2data)
tperben$stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
tperben = t(per.bengeneral2data)
stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
tperben$stage = cbind(tperben, new= stage)
inherits(data.frame(), "per.beangeneral2data")
per.beangeneral2data =as.data.frame(otu_table(per.beangeneral2))
inherits(data.frame(), "per.beangeneral2data")
inherits(list(), "per.beangeneral2data")
inherits(matrix(), "per.beangeneral2data")
typeof(per.beangeneral2data)
typeof(gc_out_radish2)
per.beangeneral2data =as.data.frame(otu_table(per.beangeneral2))
per.radishgeneral2data = as(otu_table(per.radishgeneral2), "matrix")
typeof(per.radishgeneral2data)
typeof(per.beangeneral2data)
tperben = t(per.bengeneral2data)
tperben$stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
per.beangeneral2data =as.data.frame(otu_table(per.beangeneral2))
per.radishgeneral2data = as(otu_table(per.radishgeneral2), "matrix")
class(per.beangeneral2data)
class(per.radishgeneral2data)
class(gc_out_bean2)
tperben = t(per.bengeneral2data)
class(tperben)
per.radishgeneral2data = as(otu_table(per.radishgeneral2), "matrix")
tperradish = t(per.radishgeneral2data)
tperbeand = as.data.frame(tperradish)
class(tperben)
class(tperbeand)
tperradish = as.data.frame(tperradish)
tperradish$stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
View(tperradish)
per.beangeneral2data =as(otu_table(per.beangeneral2), "matrix")
per.radishgeneral2data = as(otu_table(per.radishgeneral2), "matrix")
tperben = t(per.bengeneral2data)
tperradish = t(per.radishgeneral2data)
tperbean = t(per.bengeneral2data)
tperradish = t(per.radishgeneral2data)
tperbean = as.data.frame(tperbean)
tperradish = as.data.frame(tperradish)
tperbean <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
tperradish$stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
shapiro_bean = shapiro.test(tperbean$k)
shapiro_bean = shapiro.test(tperbean)
shapiro_bean = shapiro.test(tperbean$A)
tperbean <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
tperradish$stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
View(tperben)
per.beangeneral2data =as(otu_table(per.beangeneral2), "matrix")
per.radishgeneral2data = as(otu_table(per.radishgeneral2), "matrix")
tperbean = t(per.bengeneral2data)
tperradish = t(per.radishgeneral2data)
tperbean = as.data.frame(tperbean)
tperradish = as.data.frame(tperradish)
tperbean$stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
tperradish$stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
shapiro_bean = shapiro.test(tperbean$A)
shapiro.test(tperbean$A)
shapiro_bean = shapiro.test(tperbean$k)
shapiro_bean = shapiro.test(tperbean$k)shapiro_radish = shapiro.test(per.radishgeneral2data)
shapiro.test(tperbean$K)
shapiro.test(tperbean$G)
shapiro.test(tperbean$M)
shapiro.test(tperbean$E)
shapiro.test(tperbean$T)
shapiro.test(tperbean$P)
shapiro.test(tperbean$L)
shapiro.test(tperbean$C)
shapiro.test(tperbean$K)
shapiro.test(tperradish$U)
shapiro.test(tperradish$U)
shapiro.test(tperradish$K)
shapiro.test(tperradish$G)
shapiro.test(tperradish$O)
View(tperradish)
shapiro.test(tperradish$U)
shapiro.test(tperradish$K)
shapiro.test(tperradish$G)
shapiro.test(tperradish$O)
shapiro.test(tperradish$T)
shapiro.test(tperradish$L)
shapiro.test(tperradish$J)
shapiro.test(tperradish$E)
qqplot(tperradish$A)
aov(G ~ stage, data = tperbean )
summary.aov(test)
test = aov(G ~ stage, data = tperbean )
summary.aov(test)
Bean_G = aov(G ~ stage, data = tperbean )
Bean_G = aov(G ~ stage, data = tperbean )
Bean_M = aov(M ~ stage, data = tperbean )
Bean_E = aov(E ~ stage, data = tperbean )
Bean_T = aov(T ~ stage, data = tperbean )
Bean_P = aov(P ~ stage, data = tperbean )
Bean_L = aov(L ~ stage, data = tperbean )
Bean_C = aov(C ~ stage, data = tperbean )
summary = summary.aov(Bean_G, Bean_M)
summary.aov(Bean_G)
summary.aov(Bean_M)
summary.aov(Bean_E)
summary.aov(Bean_T)
summary.aov(Bean_P)
summary.aov(Bean_L)
summary.aov(Bean_C)
TukeyHSD(Bean_G)
Bean_K = kruskal.test(k ~ stage, data = tperbean )
Bean_K = kruskal.test(K ~ stage, data = tperbean )
Bean_K = wilcox.test (K ~ stage, data = tperbean )
Bean_K = kruskal.test (tperben$K, tperbean$stage )
levels(tperbean$A)
levels(tperbean$stage)
tperbean$stage = as.factor(tperbean$stage)
Bean_K = wilcox.test (K ~ stage, data = tperbean )
Bean_M = aov(M ~ stage, data = tperbean )
aov(M ~ stage, data = tperbean )
aov(G ~ stage, data = tperbean )
aov(E ~ stage, data = tperbean )
per.beangeneral2data =as(otu_table(per.beangeneral2), "matrix")
per.radishgeneral2data = as(otu_table(per.radishgeneral2), "matrix")
tperbean = t(per.bengeneral2data)
tperradish = t(per.radishgeneral2data)
tperbean = as.data.frame(tperbean)
tperradish = as.data.frame(tperradish)
tperbean$stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
tperradish$stage <- c("Germinating", "Germinating", "Germinating", "Seedling", "Seedling", "Seedling", "Seeds", "Seeds", "Seeds")
aov(G ~ stage, data = tperbean )
aov(M ~ stage, data = tperbean )
shapiro.test(tperbean$G)
shapiro.test(tperbean$K)
shapiro.test(tperbean$M)
shapiro.test(tperbean$E)
shapiro.test(tperbean$T)
shapiro.test(tperbean$P)
shapiro.test(tperbean$L)
shapiro.test(tperbean$C)
Bean_G = aov(G ~ stage, data = tperbean )
Bean_M = aov(M ~ stage, data = tperbean )
Bean_E = aov(E ~ stage, data = tperbean )
Bean_T = aov(T ~ stage, data = tperbean )
Bean_P = aov(P ~ stage, data = tperbean )
Bean_L = aov(L ~ stage, data = tperbean )
Bean_C = aov(C ~ stage, data = tperbean )
summary.aov(Bean_G)
summary.aov(Bean_M)
summary.aov(Bean_E)
summary.aov(Bean_T)
summary.aov(Bean_P)
summary.aov(Bean_L)
summary.aov(Bean_C)
tperbean$stage = tperbean$stage
Bean_G = aov(G ~ stage, data = tperbean )
Bean_M = aov(M ~ stage, data = tperbean )
Bean_E = aov(E ~ stage, data = tperbean )
Bean_T = aov(T ~ stage, data = tperbean )
Bean_P = aov(P ~ stage, data = tperbean )
Bean_L = aov(L ~ stage, data = tperbean )
Bean_C = aov(C ~ stage, data = tperbean )
summary.aov(Bean_G)
summary.aov(Bean_M)
summary.aov(Bean_E)
summary.aov(Bean_T)
summary.aov(Bean_P)
summary.aov(Bean_L)
summary.aov(Bean_C)
Bean_K = kruskal.test(G ~ stage, data = tperbean)
tperbean$stage = tperbean$stage
Bean_K = kruskal.test(G ~ stage, data = tperbean)
tperbean$stage = as.factor(tperbean$stage)
Bean_K = kruskal.test(G ~ stage, data = tperbean)
Bean_G = aov(G ~ stage, data = tperbean )
Bean_M = aov(M ~ stage, data = tperbean )
Bean_E = aov(E ~ stage, data = tperbean )
Bean_T = aov(T ~ stage, data = tperbean )
Bean_P = aov(P ~ stage, data = tperbean )
Bean_L = aov(L ~ stage, data = tperbean )
Bean_C = aov(C ~ stage, data = tperbean )
summary.aov(Bean_G)
summary.aov(Bean_M)
summary.aov(Bean_E)
summary.aov(Bean_T)
summary.aov(Bean_P)
summary.aov(Bean_L)
summary.aov(Bean_C)
Bean_K = kruskal.test(G ~ stage, data = tperbean)
kruskal.test(G ~ stage, data = tperbean)
shapiro.test(tperradish$U)
shapiro.test(tperradish$K)
shapiro.test(tperradish$G)
shapiro.test(tperradish$O)
shapiro.test(tperradish$T)
shapiro.test(tperradish$L)
shapiro.test(tperradish$J)
shapiro.test(tperradish$E)
tperradish$stage = as.factor(tperradish$stage)
Radish_U = kruskal.test(U ~ stage, data = tperradish)
Radish_J = aov(J ~ stage, data = tperradish)
summary.aov(Bean_J)
Radish_J = aov(J ~ stage, data = tperradish)
summary.aov(Radish_J)
kruskal.test(U ~ stage, data = tperradish)
kruskal.test(K ~ stage, data = tperradish)
kruskal.test(G ~ stage, data = tperradish)
kruskal.test(T ~ stage, data = tperradish)
kruskal.test(L ~ stage, data = tperradish)
kruskal.test(E ~ stage, data = tperradish)
pairwise.wilcox.test(tperradish$G, tperradish$stage,
p.adjust.method = "BH")
kruskal.test(G ~ stage, data = tperradish)
pairwise.wilcox.test(tperradish$G, tperradish$stage,
p.adjust.method = "BH")
kruskal.test(G ~ stage, data = tperradish)
pairwise.wilcox.test(tperradish$G, tperradish$stage,
p.adjust.method = "BH")
shapiro.test(tperradish$G)
pairwise.wilcox.test(tperradish$G, tperradish$stage)
pairwise.wilcox.test(tperradish$U, tperradish$stage,
p.adjust.method = "BH")
kruskal.test(G ~ stage, data = tperradish)
pairwise.wilcox.test(tperradish$G, tperradish$stage,
p.adjust.method = "BH")
Bean_K = aov(k ~ stage, data = tperbean)
Bean_G = aov(G ~ stage, data = tperbean )
Bean_M = aov(M ~ stage, data = tperbean )
Bean_E = aov(E ~ stage, data = tperbean )
Bean_T = aov(T ~ stage, data = tperbean )
Bean_P = aov(P ~ stage, data = tperbean )
Bean_L = aov(L ~ stage, data = tperbean )
Bean_C = aov(C ~ stage, data = tperbean )
Bean_K = aov(K ~ stage, data = tperbean)
summary.aov(Bean_K)
summary.aov(Bean_G)
summary.aov(Bean_M)
summary.aov(Bean_E)
summary.aov(Bean_T)
summary.aov(Bean_P)
summary.aov(Bean_L)
summary.aov(Bean_C)
summary.aov(Radish_J)
Radish_U = aov(U ~ stage, data = tperradish)
Radish_K = aov(K ~ stage, data = tperradish)
Radish_G = aov(G ~ stage, data = tperradish)
Radish_O = aov(O ~ stage, data = tperradish)
Radish_T = aov(T ~ stage, data = tperradish)
Radish_L = aov(L ~ stage, data = tperradish)
Radish_E = aov(E ~ stage, data = tperradish)
Radish_J = aov(J ~ stage, data = tperradish)
summary.aov(Radish_U)
summary.aov(Radish_K)
summary.aov(Radish_G)
summary.aov(Radish_O)
summary.aov(Radish_T)
summary.aov(Radish_L)
summary.aov(Radish_E)
summary.aov(Radish_J)
TukeyHSD(Radish_U)
TukeyHSD(Radish_U)
TukeyHSD(Radish_K)
TukeyHSD(Radish_G)
TukeyHSD(Radish_O)
TukeyHSD(Radish_T)
TukeyHSD(Radish_O)
TukeyHSD(Radish_L)
TukeyHSD(Radish_E)
